#include<stdio.h>
#include<stdlib.h>
#include<GL/glut.h>
#include<math.h>
static int m=0,M=0,v=0,V=0,E=0,e=0,r=0,R=0,j=0,J=0,s=0,S=0,U=0,u=0,n=0,N=0,X=0,z=0,B=0,b=0,c=0;
static GLint axis=2;
GLfloat diffuseMaterial[4]={0.5,0.5,0.5,1.0};


int main(int argc,char **argv)
{

/*Gamma*/
void reshape(int w,int h)
{
glViewport(0,0,(GLsizei)w,(GLsizei)h);
glMatrixMode(GL_PROJECTION);
glLoadIdentity();
gluPerspective(60.0,(GLfloat)w/(GLfloat)h,1.0,20.0);
glMatrixMode(GL_MODELVIEW);
glLoadIdentity();
gluLookAt(0.0,0.0,5.0,0.0,0.0,0.0,0.0,1.0,0.0);
}

/*adit*/
void keyboard(unsigned char key,int x,int y)
{
switch(key)
{
case 'z':z=(z+50)%360;
    glutPostRedisplay();
    break;
case 'm':m=(m+3)%360;
    glutPostRedisplay();
    break;
case 'M':M=(M+12)%360;
    glutPostRedisplay();
    break;
case 'v':v=(v+2)%360;
    glutPostRedisplay();
    break;
case 'V':V=(V+10)%360;
    glutPostRedisplay();
    break;
case 'e':e=(e+5)%360;
    glutPostRedisplay();
    break;
case 'E':E=(E+8)%360;
    glutPostRedisplay();
         break;
case 'r':r=(r+6)%360;
    glutPostRedisplay();
    break;
case 'R':R=(R+6)%360;
    glutPostRedisplay();
    break;
case 'j':j=(j+10)%360;
    glutPostRedisplay();
    break;
case 'J':J=(J+4)%360;
    glutPostRedisplay();
         break;
case 's':s=(s+9)%360;
    glutPostRedisplay();
         break;
case 'S':S=(S+3)%360;
    glutPostRedisplay();
         break;
case 'u':u=(u+8)%360;
    glutPostRedisplay();
    break;
case 'U':U=(U+2)%360;
    glutPostRedisplay();
    break;
case 'n':n=(n+7)%360;
    glutPostRedisplay();
    break;
case 'N':N=(N+1)%360;
    glutPostRedisplay();
    break;
case 'b':b=(b+10)%360;
    glutPostRedisplay();
    break;
case 'c':c=(c+1)%360;
    b=(b+10)%360;
    glutPostRedisplay();
    break;
case 'X':X=(X+5)%360;
    glutPostRedisplay();
    break;
case 'a':z=(z+50)%360;
    b=(b+10)%360;
    m=(m+3)%360;
    v=(v+2)%360;
    e=(e+5)%360;
    r=(r+6)%360;
    j=(j+10)%360;
    s=(s+9)%360;
    u=(u+8)%360;
    n=(n+7)%360;
    c=(c+1)%360;
    glutPostRedisplay();
    break;
case 'A':z=(z+50)%360;
    b=(b+10)%360;
    M=(M+12)%360;
    V=(V+10)%360;
    E=(E+8)%360;
    R=(R+6)%360;
    J=(J+4)%360;
    S=(S+3)%360;
    U=(U+2)%360;
    N=(N+1)%360;
    c=(c+1)%360;
         glutPostRedisplay();
    break;
case 'B':z=(z+50)%360;
    b=(b+10)%360;
    c=(c+1)%360;
    m=(m+3)%360;M=(M+12)%360;
    v=(v+2)%360;V=(V+10)%360;
    e=(e+5)%360;E=(E+8)%360;
    r=(r+6)%360;R=(R+6)%360;
         j=(j+10)%360;J=(J+4)%360;
         s=(s+9)%360;S=(S+3)%360;
         u=(u+8)%360;U=(U+2)%360;
    n=(n+7)%360;N=(N+1)%360;
    glutPostRedisplay();
     break;
case 27:exit(0);
   break;
default:break;
}
}


glutInit(&argc,argv);
glutInitDisplayMode(GLUT_DOUBLE|GLUT_RGB|GLUT_DEPTH);
glutInitWindowSize(500,500);
glutInitWindowPosition(100,100);
glutCreateWindow("Tatasurya");
myinit();
glutDisplayFunc(display);
glutReshapeFunc(reshape);
glutKeyboardFunc(keyboard);
glutMouseFunc(mouse);
glEnable(GL_DEPTH_TEST);
glutMainLoop();
return 0;
}

